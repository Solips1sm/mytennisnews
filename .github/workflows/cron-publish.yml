name: Cron Publish

on:
  workflow_dispatch:
  repository_dispatch:
    types: [cron-publish]

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Invoke publish endpoint
        id: call_publish
        env:
          CRON_URL: ${{ secrets.CRON_PUBLISH_ENDPOINT }}
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
        run: |
          set -eu
          CRON_URL="$(printf '%s' "${CRON_URL:-}" | tr -d '\r')"
          CRON_SECRET="$(printf '%s' "${CRON_SECRET:-}" | tr -d '\r')"
          if [ -z "${CRON_URL:-}" ]; then
            echo "CRON_PUBLISH_ENDPOINT secret is not set" >&2
            exit 1
          fi
          if [ -z "${CRON_SECRET:-}" ]; then
            echo "CRON_SECRET secret is not set" >&2
            exit 1
          fi
          printf 'Invoking publish endpoint: %s\n' "$CRON_URL"
          response_file="$(mktemp)"
          http_status=$(curl --silent --show-error -L "$CRON_URL" \
            -H "Authorization: Bearer $CRON_SECRET" \
            --connect-timeout 10 \
            --max-time 300 \
            --retry 2 \
            --retry-delay 5 \
            --write-out '%{http_code}' \
            --output "$response_file")

          printf 'Publish endpoint status: %s\n' "$http_status"
          printf 'Publish endpoint response:\n'
          cat "$response_file"
          printf '\n'

          if [ "$http_status" -ge 400 ]; then
            echo "Publish endpoint returned error status" >&2
            exit 1
          fi

          timed_out=$(jq -r '.summary.timedOut // false' "$response_file" 2>/dev/null || echo false)
          echo "timed_out=${timed_out}" >> "$GITHUB_OUTPUT"
          rm -f "$response_file"
